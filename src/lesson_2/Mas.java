package lesson_2;

/**
 * Массив - это группа однотипных переменных,
 * для обращения к которым используется общее имя
 * Объявить массив можно двумя способами:
 * Первый способ заключается в том, что мы прописываем тип данных,
 * затем название массива, затем, после знака равенства, используя оператор new,
 * создаем массив на определенное количество ячеек.
 * Напоминаю, что массив, состоящий из примитивных типов данных - это не объект,
 * это такой же примитив, с которым работает процессор. Процессор, в свою очередь,
 * должен понимать, сколько памяти выделять для данного массива.
 * Поэтому, после создания массива, мы указываем количество ячеек,
 * которое хотим выделить при создании массива. Другими словами, это размер массива
 * тип_данных название_массива = new тип_данных[размер_массива];
 *
 * Второй способ заключается в том, что вместо указания количества ячеек,
 * мы указываем сразу значения. Таким образом, в любом случае,
 * процессор получает длину массива и выделяет нужное количество ячеек памяти
 * тип_данных название массива = {элемен_массива_1, элемент_массива_2, ...};
 *
 * Чтобы применить какое-либо действие к каждому элементу массива,
 * необходимо обратиться к каждому элементу массива через цикл по индексу
 * можно использовать стандартный цикл for, а можно использовать for-each
 *
 * цикл for-each используется для перебора элементов массива или коллекции
 * for (итератор : коллекция) {
 *     // тело цикла
 * }
 * итератор проходит по каждому элементу коллекции или массива
 * важно помнить, что цикл for each не требует ручного изменения переменной -
 * шага для перебора. Цикл автоматически выполняет эту работу
 *
 * Операторы break и continue
 * @break полностью прерывает работу итерации и выходит из цикла
 * @continue, в свою очередь, прерывает текущую итерацию и переходит к следующей
 *
 * Предположим, мы считаем до десяти. У нас есть переменная count - счетчик
 * если мы дойдем до цифры 4, то ее мы считать не будем,
 * а когда дойдем до цифры 6, то мы закончим наш счет и больше считать не будем
 * вначале рассмотрим все чисто логически, потом с помощью программы
 * мы начинаем наш счет:
 * первое число - 0.
 * 0 != 4 и 0 != 6, следовательно, считаем
 * следующая итерация - цифра 1
 * 1 != 4 и 1 != 6, значит снова считаем
 * 2 != 4 и 2 != 6, снова считаем
 * 3 != 4 и 3 != 6, и опять считаем
 * следующая итерация - 4
 * 4 == 4. Мы договорились не считать четверку. Пропускаем ее и идем дальше
 * 5 != 4 и 5 != 6, считаем дальше
 * 6 == 6 - прекращаем счет
 * Итого мы насчитали: 0, 1, 2, 3, 5
 * Теперь рассмотрим эту задачу с помощью программы
 *
 * for (int i = 0; i < 10; ++i) {
 *     // начинаем с 0, заканчиваем 10, увеличиваем каждый раз на 1
 *     if (i == 4) { // если наш счетчик равен 4
 *         continue; // то применяем оператор continue
 *         // пропускаем текущую итерацию и переходим к следующей
 *     } else if (i == 6) { // если же мы дошли до 6
 *         break; // то применяем оператор break,
 *         // выходим из цикла и прекращаем счет
 *     } else {
 *         System.out.println(count); // если же это не 4 и не 6, то выводим цифры
 *     }
 * }
 *
 * теперь попробуйте написать тоже самое с помощью цикла for-each
 *
 * int mass[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
 * for (int x : mass) {
 *     // ваш код
 * }
 */

public class Mas {
    public static void main(String[] args) {

        int ma[] = new int[10]; // объявление массива
        int mass[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}; // объявление с инициализацией

        // for в массиве
        for (int i = 0; i < mass.length; ++i) {
            System.out.println(mass[i]);

            if (i == 2) {
                continue; // пропуск текущей итерации, переход к следующей
            }

            if (i == 8) {
                break; // пропуск текущей итерации, выход из цикла
            }
        }

        //for-each в массиве, как и в любой другой коллекции
        for (int x : mass) {
            System.out.println(x);
        }

    }
}
